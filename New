INSERT INTO customers (name, email, city, country) VALUES
('John Doe', 'john@example.com', 'New York', 'USA'),
('Alice Smith', 'alice@example.com', 'London', 'UK'),
('Ravi Kumar', 'ravi@example.com', 'Hyderabad', 'India');

INSERT INTO products (name, price) VALUES
('Laptop', 750.00),
('Smartphone', 500.00),
('Headphones', 80.00),
('Monitor', 200.00);

INSERT INTO orders (customer_id, order_date) VALUES
(1, CURRENT_DATE - INTERVAL '5 days'),
(2, CURRENT_DATE - INTERVAL '3 days'),
(3, CURRENT_DATE - INTERVAL '1 day');

INSERT INTO order_items (order_id, product_id, quantity) VALUES
(1, 1, 1),  -- John ordered 1 Laptop
(1, 3, 2),  -- John ordered 2 Headphones
(2, 2, 1),  -- Alice ordered 1 Smartphone
(3, 4, 2);  -- Ravi ordered 2 Monitors


✅ Finalized Test Case Report (Based on Your Inserted Data)

TCID	Title	Steps	Expected Result	Status	Test Query	Query Status

TC001	Create a new customer	1. Connect to DB<br>2. Insert a customer with name, email, city, country into customers	Customer inserted successfully	Pending	INSERT INTO customers (name, email, city, country) VALUES ('Mira', 'mira@xyz.com', 'Berlin', 'Germany');	Pending
TC002	Read all customers from database	1. Connect to DB<br>2. Execute SELECT * FROM customers;	List of all customers displayed	Pending	SELECT * FROM customers;	Pending
TC003	Update a customer's email	1. Connect to DB<br>2. Execute UPDATE customers SET email = 'new@email.com' WHERE id = 1;	Customer’s email updated successfully	Pending	UPDATE customers SET email = 'new@email.com' WHERE id = 1;	Pending
TC004	Delete a customer from database	1. Connect to DB<br>2. Execute DELETE FROM customers WHERE id = 1;	Customer with ID 1 deleted	Pending	DELETE FROM customers WHERE id = 1;	Pending
TC005	Create order and order items for customer	1. Connect to DB<br>2. Insert into orders with valid customer_id<br>3. Insert into order_items with valid product_id and quantity	Order and items inserted	Pending	INSERT INTO orders (customer_id) VALUES (1);<br>INSERT INTO order_items (order_id, product_id, quantity) VALUES (3, 1, 1);	Pending
TC006	Get customer's order history (procedure)	1. Connect to DB<br>2. Call stored procedure get_customer_orders(1);	Returns all orders made by customer ID 1	Pending	CALL get_customer_orders(1);	Pending
